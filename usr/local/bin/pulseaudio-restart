#!/bin/bash

if [[ "$USER" == 'root' ]];
then
  echo "This should not be used by root!";
  exit 1;
fi

function restartPulseAudio()
{
  #sudo alsa force-reload;

  # pulseaudio runs in user-land context
  # systemctl restart pulseaudio.service \
  # systemctl --user restart pulseaudio.service \
  # systemctl --user restart pulseaudio.socket

  pulseaudio --kill && killall -9 pulseaudio;
  pulseaudio --start;
  sudo alsa force-reload;

  exit $?
}

function restartChromeAudioService()
{
  ps --forest -o pid,cmd -g $(pidof chrome) | grep -E '\.(VideoCapture|Audio)Service' | cut -f2 -d' ' | while read pid;
  do
    kill -quit $pid;
  done

  # find a sub-process of chrome named '.AudioService'
  #ps --forest -o pid,cmd -g $(pidof chrome) | grep '.AudioService' | cut -f1 -d' ' | while read pid;
  #do
  #  kill -quit $pid;
  #done

  # find a sub-process of chrome named '.VideoCaptureService'
  #ps --forest -o pid,cmd -g $(pidof chrome) | grep '.VideoCaptureService' | cut -f1 -d' ' | while read pid;
  #do
  #  kill -quit $pid;
  #done
}


if [[ -x $(which notify-send) ]];
then
   notify-send "Running $(basename $0)" --icon=dialog-information;
fi


restartPulseAudio;
sleep 1;
restartChromeAudioService;

status=$?;

#if [[ "${status}" -eq 0 ]];
#then
#  pacmd set-sink-port 0 hdmi-output;
#fi

exit ${status};
