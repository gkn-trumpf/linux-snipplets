#!/bin/bash
PWD=$(pwd)
PHP_BINARY=$(which php7.2 php7.4 php8.0| head -n1);
COMPOSER_BINARY=$(which composer2.phar);
WWW_USER='www-data'

[[ -z "${COMPOSER_BINARY}" ]] && COMPOSER_BINARY=$(dirname $0)/composer2.phar
[[ -f "${COMPOSER_BINARY}" && ! -x "${COMPOSER_BINARY}" ]] && chmod +x ${COMPOSER_BINARY}

echo;

if [[ ! -x $(which jq) ]];
then
        echo "jq binary required!";
        exit 1
fi

if [[ -r "${PWD}/composer.json" ]];
then
        echo "Determining PHP-Version from composer.json";
	COMPOSER_PHP_VERSION=$(jq -r '[.platform.php|tostring]' ${PWD}/composer.json | grep -Eo "[0-9\.]+");

	if [[ -z "$COMPOSER_PHP_VERSION" ]];
	then
        	COMPOSER_PHP_VERSION=$(jq -r '[.config.platform.php|tostring]' ${PWD}/composer.json | grep -Eo "[0-9\.]+");
	fi

	if [[ -z "$COMPOSER_PHP_VERSION" ]];
	then
		COMPOSER_PHP_VERSION=$(jq -r '[.require.php|tostring]' ${PWD}/composer.json | grep -Eo "[0-9\.]+");
	fi

	COMPOSER_PHP_VERSION_ARRAY=( ${COMPOSER_PHP_VERSION//./ } )
	DESIRED_MAJOR_VERSION=${COMPOSER_PHP_VERSION_ARRAY[0]}.${COMPOSER_PHP_VERSION_ARRAY[1]};

	echo "Searching PHP ${DESIRED_MAJOR_VERSION}";
	PHP_BINARY=$(ls /usr/bin/php${DESIRED_MAJOR_VERSION}* /usr/local/bin/php${DESIRED_MAJOR_VERSION}* 2> /dev/null | head -n1)

	if [[ -z "${PHP_BINARY}" ]];
	then
		echo "Error: Unable to find php${DESIRED_MAJOR_VERSION}.* binary!";
		exit 1;
	fi
fi

# Patch Shebang to match desired PHP-Version
#PHP_VERSION=$(basename ${PHP_BINARY});
#echo "Patching composer-shebang"
#sed -i '1!b;s/env php[^\r\n]*/env '${PHP_VERSION}' -d phar.require_hash=false/' ${COMPOSER_BINARY};

sudo update-alternatives --set php ${PHP_BINARY}

echo "Using ${PHP_BINARY} and ${COMPOSER_BINARY} $@";

args="$@"

#su ${USER} -pc "php ${COMPOSER_BINARY} ${args}"
sudo su ${WWW_USER:-$USER} -pc "php ${COMPOSER_BINARY} ${args}"

exit $?
