#!/bin/bash

function syntaxHelp()
{
  echo "Syntax: $(basename $0) my-database.db";
  exit 1;
}

[[ -f "${1}" ]] || { syntaxHelp; }

function repairSqlite3Db()
{
  srcDb="${1}";
  srcFilename=$(basename "${srcDb}");
  newDb=$(dirname "${1}")"/."$(basename "${1}")".repair";

#  if ! [[ $(lsof | grep "${srcDb}") ]]
#  then
#    fileName=$(basename "${srcDb}")
#    echo -e "\e[31mFile '${srcFilename}' is currently in use!!\e[0m";
#    return 1;
#  fi

  echo "Reparing & Rebuilding ${srcDb}";

  success=1;
  (sqlite3 "${srcDb}" '.dump' | sqlite3 "${newDb}") || {
    echo -e "\e[31mData-Dump & Rebuild failed!\e[0m";
    success=0;
  }

  [[ "${success}" -eq 1 ]] && {
    echo "Checking Database integrity ...";
    sqlite3 "${newDb}" 'PRAGMA integrity_check;' || {
      echo -e "\e[31mCheck failed!\e[0m";
      success=0;
    }
  }

  [[ "${success}" -eq 1 ]] && {
    echo "Optimizing (this may take while!) ...";
    sqlite3 main~new.db "VACUUM;" || {
      echo -e "\e[31mfailed!\e[0m";
      success=0;
    }
  }

  if [[ "${success}" -eq 1 ]];
  then
    echo -e "\e[32mSuccess!\e[0m";
    mv "${srcDb}" "${srcDb}~bak" && mv "${newDb}" "${srcDb}";
  else
    echo "Cleaning up";
    rm "${newDb}";
  fi

  return 0;
}

if [[ "${#@}" -ge 0 ]];
then
  for file in "$@";
  do
    file=$(realpath "${file}");
    repairSqlite3Db "${file}";
  done
else
  syntaxHelp;
fi
